#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import json
from database import init_db, async_session
from services import EquipmentService, UserService
from models import EquipmentCreate, UserCreate
from config import Config

async def add_sample_equipment():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"""
    await init_db()
    
    sample_equipment = [
        {
            "name": "iPhone 15 Pro",
            "category": "–ö–æ–º–ø—å—é—Ç–µ—Ä—ã –∏ –Ω–æ—É—Ç–±—É–∫–∏",
            "description": "–ù–æ–≤–µ–π—à–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Apple —Å —Ç–∏—Ç–∞–Ω–æ–≤—ã–º –∫–æ—Ä–ø—É—Å–æ–º –∏ —á–∏–ø–æ–º A17 Pro",
            "price": 99990,
            "currency": "RUB",
            "brand": "Apple",
            "model": "iPhone 15 Pro",
            "specifications": {
                "–≠–∫—Ä–∞–Ω": "6.1 –¥—é–π–º–∞ Super Retina XDR",
                "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä": "A17 Pro",
                "–ü–∞–º—è—Ç—å": "128GB",
                "–ö–∞–º–µ—Ä–∞": "48MP –æ—Å–Ω–æ–≤–Ω–∞—è + 12MP —É–ª—å—Ç—Ä–∞—à–∏—Ä–æ–∫–∞—è",
                "–ë–∞—Ç–∞—Ä–µ—è": "–î–æ 23 —á–∞—Å–æ–≤ –≤–∏–¥–µ–æ"
            },
            "availability": True
        },
        {
            "name": "MacBook Air M2",
            "category": "–ö–æ–º–ø—å—é—Ç–µ—Ä—ã –∏ –Ω–æ—É—Ç–±—É–∫–∏",
            "description": "–£–ª—å—Ç—Ä–∞—Ç–æ–Ω–∫–∏–π –Ω–æ—É—Ç–±—É–∫ —Å —á–∏–ø–æ–º M2 –∏ –¥–∏—Å–ø–ª–µ–µ–º Liquid Retina",
            "price": 119990,
            "currency": "RUB",
            "brand": "Apple",
            "model": "MacBook Air M2",
            "specifications": {
                "–≠–∫—Ä–∞–Ω": "13.6 –¥—é–π–º–∞ Liquid Retina",
                "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä": "Apple M2",
                "RAM": "8GB",
                "SSD": "256GB",
                "–í–µ—Å": "1.24 –∫–≥"
            },
            "availability": True
        },
        {
            "name": "Dell PowerEdge R750",
            "category": "–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
            "description": "–°–µ—Ä–≤–µ—Ä 1U —Å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞–º–∏ Intel Xeon 3-–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è",
            "price": 450000,
            "currency": "RUB",
            "brand": "Dell",
            "model": "PowerEdge R750",
            "specifications": {
                "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä": "2x Intel Xeon Silver 4314",
                "RAM": "32GB DDR4",
                "–î–∏—Å–∫–∏": "2x 480GB SSD",
                "–°–µ—Ç—å": "2x 1Gb Ethernet",
                "–§–æ—Ä–º-—Ñ–∞–∫—Ç–æ—Ä": "1U"
            },
            "availability": True
        },
        {
            "name": "Cisco Catalyst 2960-X",
            "category": "–°–µ—Ç–µ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
            "description": "–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π PoE+",
            "price": 85000,
            "currency": "RUB",
            "brand": "Cisco",
            "model": "WS-C2960X-24TS-L",
            "specifications": {
                "–ü–æ—Ä—Ç—ã": "24x 1Gb Ethernet + 4x SFP",
                "PoE": "PoE+ –Ω–∞ –≤—Å–µ—Ö –ø–æ—Ä—Ç–∞—Ö",
                "–ü—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å": "52 Gbps",
                "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ": "CLI, Web, SNMP"
            },
            "availability": True
        },
        {
            "name": "HP LaserJet Pro M404n",
            "category": "–ü—Ä–∏–Ω—Ç–µ—Ä—ã –∏ –ú–§–£",
            "description": "–ú–æ–Ω–æ—Ö—Ä–æ–º–Ω—ã–π –ª–∞–∑–µ—Ä–Ω—ã–π –ø—Ä–∏–Ω—Ç–µ—Ä –¥–ª—è –æ—Ñ–∏—Å–∞",
            "price": 15000,
            "currency": "RUB",
            "brand": "HP",
            "model": "LaserJet Pro M404n",
            "specifications": {
                "–¢–∏–ø": "–ú–æ–Ω–æ—Ö—Ä–æ–º–Ω—ã–π –ª–∞–∑–µ—Ä–Ω—ã–π",
                "–°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏": "38 —Å—Ç—Ä/–º–∏–Ω",
                "–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ": "1200x1200 dpi",
                "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ": "USB, Ethernet, Wi-Fi"
            },
            "availability": True
        },
        {
            "name": "Samsung Odyssey G7",
            "category": "–ú–æ–Ω–∏—Ç–æ—Ä—ã –∏ –¥–∏—Å–ø–ª–µ–∏",
            "description": "–ò–≥—Ä–æ–≤–æ–π –º–æ–Ω–∏—Ç–æ—Ä —Å –∏–∑–æ–≥–Ω—É—Ç—ã–º —ç–∫—Ä–∞–Ω–æ–º 32 –¥—é–π–º–∞",
            "price": 45000,
            "currency": "RUB",
            "brand": "Samsung",
            "model": "LC32G75TQSRXCI",
            "specifications": {
                "–î–∏–∞–≥–æ–Ω–∞–ª—å": "32 –¥—é–π–º–∞",
                "–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ": "2560x1440 (QHD)",
                "–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è": "240 –ì—Ü",
                "–¢–∏–ø –ø–∞–Ω–µ–ª–∏": "VA",
                "–ò–∑–≥–∏–±": "1000R"
            },
            "availability": True
        },
        {
            "name": "Intel Core i7-13700K",
            "category": "–ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ",
            "description": "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä Intel 13-–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è —Å 16 —è–¥—Ä–∞–º–∏",
            "price": 35000,
            "currency": "RUB",
            "brand": "Intel",
            "model": "Core i7-13700K",
            "specifications": {
                "–Ø–¥—Ä–∞": "8P + 8E (16 —è–¥–µ—Ä)",
                "–ü–æ—Ç–æ–∫–∏": "24",
                "–ë–∞–∑–æ–≤–∞—è —á–∞—Å—Ç–æ—Ç–∞": "3.4 –ì–ì—Ü",
                "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞": "5.4 –ì–ì—Ü",
                "TDP": "125W",
                "–°–æ–∫–µ—Ç": "LGA1700"
            },
            "availability": True
        },
        {
            "name": "Logitech MX Master 3S",
            "category": "–ü–µ—Ä–∏—Ñ–µ—Ä–∏—è",
            "description": "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è –º—ã—à—å –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤",
            "price": 8500,
            "currency": "RUB",
            "brand": "Logitech",
            "model": "MX Master 3S",
            "specifications": {
                "–¢–∏–ø": "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è",
                "–î–∞—Ç—á–∏–∫": "Darkfield 8000 DPI",
                "–ë–∞—Ç–∞—Ä–µ—è": "–î–æ 70 –¥–Ω–µ–π",
                "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ": "Bluetooth, USB-A",
                "–ö–Ω–æ–ø–∫–∏": "7 –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º—ã—Ö"
            },
            "availability": True
        }
    ]
    
    async with async_session() as db:
        equipment_service = EquipmentService(db)
        
        print("üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è...")
        
        for item_data in sample_equipment:
            equipment = EquipmentCreate(**item_data)
            created = await equipment_service.create_equipment(equipment)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {created.name} - {created.price:,.0f} {created.currency}")
        
        print(f"\nüéâ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(sample_equipment)} –µ–¥–∏–Ω–∏—Ü –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è!")

async def add_admin_user():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    await init_db()
    
    async with async_session() as db:
        user_service = UserService(db)
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_data = UserCreate(
            telegram_id=Config.ADMIN_USER_ID,
            username="admin",
            first_name="Admin",
            last_name="User",
            is_admin=True
        )
        
        try:
            admin = await user_service.create_user(admin_data)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin.first_name} (ID: {admin.telegram_id})")
        except Exception as e:
            print(f"‚ÑπÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏...")
    
    await add_sample_equipment()
    await add_admin_user()
    
    print("\n‚ú® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: python main.py")

if __name__ == "__main__":
    asyncio.run(main())

